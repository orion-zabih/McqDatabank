@model KTS_Testing_System.ViewModel.TestVM

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm("Create", "Tests", FormMethod.Post, new { id = "testForm" }))
{

    @Html.AntiForgeryToken()
    if (!ViewData.ModelState.IsValid)
    {
        <div class="msg-block alert alert-danger alert-dismissible" role="alert" style="margin:10px;">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            @Html.ValidationSummary(true, "")
        </div>
    }
    @Html.Partial("~/Views/Tests/ManageTest.cshtml", Model)
    @*<div class="row panel-heading bg-system">
        New Test
        <div class="floatright">
            <div class="col-md-12">
                <input value="Create" name="processingStatus" id="processingStatus" onclick="submitTestOnClick(this)" class="btn btn-bg-system" type="button">

                @Html.ActionLink("Back To List", "Index", "Tests", null, htmlAttributes: new { @class = "btn btn-bg-system" })
            </div>
        </div>
    </div>


    <div>

        <div class="row top-spacing">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Test Details
                </div>

                <div class="panel-body">

                    @Html.HiddenFor(model => model.Tests.test_id)
                    

                </div>
            </div>

        </div>
        <div class="row top-spacing">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h5 class="verticalStrip-pvcolor">
                        Questions Pool
                        <div style="float:right;">
                            <input id="btn_search" style="line-height:1;" class="btn btn-primary" onclick="GetQuestions()" value="Search" type="button">
                        </div>
                    </h5>
                </div>
                <div class="panel-body">
                   

                </div>
            </div>
        </div>



    </div>*@

}

@section scripts
{

    <script src="~/Scripts/ViewScripts/Test_Scripts.js"></script>
    @if (Model != null && !string.IsNullOrEmpty(Model.MessageDescription))
    {
        <script> sweetAlert("", "@Model.MessageDescription", "error"); </script>
    }

}
